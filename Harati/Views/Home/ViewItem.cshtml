@model IEnumerable<Harati.Models.ItemCategoryWrap>

@{
    ViewBag.Title = "ViewItem";
    Layout = "~/Views/Shared/_LayoutHarati.cshtml";
}
<script src="~/assets/js/jqueryside.min.js"></script>
<style>
    body {
        font-size: 12px;
        font-family: Verdana,Arial;
    }

    #feedback {
        position: fixed;
        top: 100px;
        left: -340px;
    }

        #feedback form {
            float: left;
            border: 1px solid #ccc;
            padding: 10px;
            border-radius: 5px;
            background-color: #eee;
        }

            #feedback form label {
                display: block;
                float: left;
                text-align: right;
                margin-right: 20px;
                width: 70px;
                font-weight: bold;
                color: 019AC6;
                font-size: 14px;
            }

        #feedback a {
            /*background: url("feedback-buttons.png") no-repeat center left transparent;*/
            background: url('../../../Content/Images/order now.png')no-repeat;
            display: block;
            width: 40px;
            height: 175px;
            float: left;
            /*text-indent: -9999em;*/
            position: absolute;
            top: 70px;
            right: -40px;
            border-radius: 0px 5px 5px 0px;
            /*writing-mode: tb-rl;*/
        }

            #feedback a:hover {
                background-position: center right;
            }

        #feedback form .btn {
            float: right;
            /*background: url("send.png") no-repeat 0px 0px transparent;*/
            background-color: aquamarine;
            width: 80px;
            height: 28px;
        }

        #feedback form textarea {
            width: 200px;
            height: 140px;
            border: 1px solid #019AC6;
        }

        #feedback form input[type="text"] {
            width: 250px;
            height: 30px;
            border: 1px solid #019AC6;
        }

        #feedback h2 {
            text-align: center;
            /*color: #019AC6;*/
            /*text-shadow:0.2px 0.3px 0.3px #000;*/
            font-size: 22px;
        }
</style>
<script type="text/javascript">
    $(document).ready(function () {
        $(".pull_feedback").toggle(function () {
            $("#feedback").animate({ left: "0px" });
            return false;
        },
			function () {
			    $("#feedback").animate({ left: "-340px" });
			    return false;
			}
		); //toggle
    }); //document.ready
</script>

@foreach (var item in Model)
{
    <div id="product-section">
        <div class="row">
            <div class="col-md-6">
                @*<span style="margin-left:20%;">
                        <img src="~/@item.Image" alt="@item.ItemName" class="image-responsive">
                    </span>*@
                <div class="magnify">

                    <!-- This is the magnifying glass which will contain the original/large version -->
                    @*background: url('http://thecodeplayer.com/uploads/media/iphone.jpg') no-repeat;*@

                    @*<div class="large" style="background:url('~/@item.Image')no repeat">

                        </div>*@
                    @*<div class="large" style="background:url('../../../Content/Images/17342819_1491638250860625_4293623610297479587_n.jpg')no-repeat">


                        </div>*@
                    <div class="large" style="background:url('../../../@item.Image')no-repeat">

                    </div>
                    @*<div class="large" style="background:url('http://thecodeplayer.com/uploads/media/iphone.jpg')no-repeat;">fsdfsd</div>*@

                    <!-- This is the small image -->
                    @*<img class="small" src="http://thecodeplayer.com/uploads/media/iphone.jpg" width="200" />*@
                    <img src="~/@item.Image" alt="@item.ItemName" class="small">
                </div>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-12">
                        <h1>@item.ItemName</h1>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <span class="label label-primary">Vintage</span>
                        <span class="monospaced">No.#####</span>
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-12 bottom-rule">
                        <h2 class="product-price">@item.Price</h2>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 bottom-rule top-10"></div>
                </div>
                <div class="row">
                    <div class="col-md-12 top-10">
                        <p>To order by telephone, <a href="tel:18005551212">please call 1-800-555-1212</a></p>
                    </div>
                </div>
                <div>
                    <ul class="nav nav-tabs" role="tablist">
                        <li role="presentation" class="active">
                            <a href="#description"
                               aria-controls="description"
                               role="tab"
                               data-toggle="tab">Description</a>
                        </li>
                    </ul>
                    @item.Description

                </div>
            </div>
        </div>
    </div>

    <div id="feedback">
        @using (Html.BeginForm("Order", "Mail", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            <div class="form-group">
                @Html.Label("Color", new { @class = "form - control" })
                <input type="text" name="color" class="form-control" style="width:220px;" required="required" />
            </div>
            <div class="form-group">
                @Html.Label("Mobile", new { @class = "form - control" })
                <input type="text" name="mobile" class="form-control" style="width:220px;" required="required" />
            </div>
            <div class="form-group">
                @Html.Label("Email", new { @class = "form - control" })
                <input type="text" name="email" class="form-control" style="width:250px;" required="required" />
            </div>
            <input type="hidden" name="Image" value="@item.Image.ToString()" />
            <input type="hidden" name="Id" value="@item.ItemId.ToString()" />
            <input type="hidden" name="Name" value="@item.ItemName.ToString()" />
            <br /><br />
            <input type="submit" value="Order" style="background-color:#ccc;color:saddlebrown;font-weight:bold;" class="btn btn-info" />
        }
        @*style="text-decoration:none;
        color:saddlebrown; font-size:15px; font-weight:bold;"*@
        <a href="#" class="pull_feedback"  title="Order This"></a>

    </div>
}


<style>
    .magnify {
        width: 200px;
        margin: 50px auto;
        position: relative;
    }

    /*Lets create the magnifying glass*/
    .large {
        width: 175px;
        height: 175px;
        position: absolute;
        border-radius: 100%;
        /*Multiple box shadows to achieve the glass effect*/
        box-shadow: 0 0 0 7px rgba(255, 255, 255, 0.85), 0 0 7px 7px rgba(0, 0, 0, 0.25), inset 0 0 40px 2px rgba(0, 0, 0, 0.25);
        /*Lets load up the large image first*/
        /*background: url('http://thecodeplayer.com/uploads/media/iphone.jpg') no-repeat;*/
        /*hide the glass by default*/
        display: none;
    }

    /*To solve overlap bug at the edges during magnification*/
    .small {
        display: block;
    }
</style>
<script>
    $(document).ready(function () {

        var native_width = 0;
        var native_height = 0;

        //Now the mousemove function
        $(".magnify").mousemove(function (e) {
            //When the user hovers on the image, the script will first calculate
            //the native dimensions if they don't exist. Only after the native dimensions
            //are available, the script will show the zoomed version.
            if (!native_width && !native_height) {
                //This will create a new image object with the same image as that in .small
                //We cannot directly get the dimensions from .small because of the
                //width specified to 200px in the html. To get the actual dimensions we have
                //created this image object.
                var image_object = new Image();
                image_object.src = $(".small").attr("src");

                //This code is wrapped in the .load function which is important.
                //width and height of the object would return 0 if accessed before
                //the image gets loaded.
                native_width = image_object.width;
                native_height = image_object.height;
            }
            else {
                //x/y coordinates of the mouse
                //This is the position of .magnify with respect to the document.
                var magnify_offset = $(this).offset();
                //We will deduct the positions of .magnify from the mouse positions with
                //respect to the document to get the mouse positions with respect to the
                //container(.magnify)
                var mx = e.pageX - magnify_offset.left;
                var my = e.pageY - magnify_offset.top;

                //Finally the code to fade out the glass if the mouse is outside the container
                if (mx < $(this).width() && my < $(this).height() && mx > 0 && my > 0) {
                    $(".large").fadeIn(100);
                }
                else {
                    $(".large").fadeOut(100);
                }
                if ($(".large").is(":visible")) {
                    //The background position of .large will be changed according to the position
                    //of the mouse over the .small image. So we will get the ratio of the pixel
                    //under the mouse pointer with respect to the image and use that to position the
                    //large image inside the magnifying glass
                    var rx = Math.round(mx / $(".small").width() * native_width - $(".large").width() / 2) * -1;
                    var ry = Math.round(my / $(".small").height() * native_height - $(".large").height() / 2) * -1;
                    var bgp = rx + "px " + ry + "px";

                    //Time to move the magnifying glass with the mouse
                    var px = mx - $(".large").width() / 2;
                    var py = my - $(".large").height() / 2;
                    //Now the glass moves with the mouse
                    //The logic is to deduct half of the glass's width and height from the
                    //mouse coordinates to place it with its center at the mouse coordinates

                    //If you hover on the image now, you should see the magnifying glass in action
                    $(".large").css({ left: px, top: py, backgroundPosition: bgp });
                }
            }
        })
    })
</script>
<!-- Lets make a simple image magnifier -->
<!-- Lets load up prefixfree to handle CSS3 vendor prefixes -->
<script src="http://thecodeplayer.com/uploads/js/prefixfree.js" type="text/javascript"></script>
<!-- You can download it from http://leaverou.github.com/prefixfree/ -->
<!-- Time for jquery action -->
<script src="http://thecodeplayer.com/uploads/js/jquery-1.7.1.min.js" type="text/javascript"></script>
